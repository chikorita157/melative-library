#tag ClassProtected Class AppInherits Application	#tag Event		Sub Open()		  //You can pass a FolderItem for Sparkle.framework, or you can pass nil.  In this case, Sparkle will look for Sparkle.framework		  //in the Frameworks subdirectory of the app bundle, in ~/Library/Frameworks, and in /Library/Frameworks.		  		  dim SparkleFrameworkLocation as FolderItem = nil		  Sparkle.Initialize SparkleFrameworkLocation		  Sparkle.FoundVersionHandler = AddressOf HandleSparkleFoundVersion		  Sparkle.CancelQuitHandler = AddressOf HandleSparkleCancelQuit		  		  //Create Plist File		  dim f As FolderItem		  f=SpecialFolder.Preferences.child("com.chikorita157sanimeblog.melativelibrary.plist")		  prefs=new plist(f)		  		  //setting this will prevent problems with unhandled NSExceptions		  Sparkle.UserDefault("SUFeedURL") = "http://chikorita157.notcliche.com/malclientosx/melappcast.xml"		  		  Window2.show		End Sub	#tag EndEvent	#tag MenuHandler		Function EditPreferences() As Boolean Handles EditPreferences.Action			winprefs.show			Return True					End Function	#tag EndMenuHandler	#tag MenuHandler		Function FileAboutMelativeLibrary() As Boolean Handles FileAboutMelativeLibrary.Action						Carbon.ShowAboutBox "Melative Library",  "Version " + app.shortVersion, "", "Copyright Â© 2010 " + "James M." + EndOfLine +  "All rights reserved."			return true					End Function	#tag EndMenuHandler	#tag MenuHandler		Function FileCheckforUpdates() As Boolean Handles FileCheckforUpdates.Action			Sparkle.CheckForUpdates true			Sparkle.CheckStatus			Return True					End Function	#tag EndMenuHandler	#tag Method, Flags = &h21		Private Function HandleSparkleCancelQuit() As Boolean		  return true		End Function	#tag EndMethod	#tag Method, Flags = &h21		Private Sub HandleSparkleFoundVersion(isNew as Boolean, version as String)		  break		End Sub	#tag EndMethod	#tag Property, Flags = &h0		loginenc As string	#tag EndProperty	#tag Property, Flags = &h0		MemPassword As string	#tag EndProperty	#tag Property, Flags = &h0		MemUsername As String	#tag EndProperty	#tag Property, Flags = &h0		prefs As plist	#tag EndProperty	#tag Constant, Name = kEditClear, Type = String, Dynamic = False, Default = \"&Delete", Scope = Public		#Tag Instance, Platform = Windows, Language = Default, Definition  = \"&Delete"		#Tag Instance, Platform = Linux, Language = Default, Definition  = \"&Delete"	#tag EndConstant	#tag Constant, Name = kFileQuit, Type = String, Dynamic = False, Default = \"&Quit", Scope = Public		#Tag Instance, Platform = Windows, Language = Default, Definition  = \"E&xit"	#tag EndConstant	#tag Constant, Name = kFileQuitShortcut, Type = String, Dynamic = False, Default = \"", Scope = Public		#Tag Instance, Platform = Mac OS, Language = Default, Definition  = \"Cmd+Q"		#Tag Instance, Platform = Linux, Language = Default, Definition  = \"Ctrl+Q"	#tag EndConstant	#tag ViewBehavior		#tag ViewProperty			Name="loginenc"			Group="Behavior"			Type="string"			EditorType="MultiLineEditor"		#tag EndViewProperty		#tag ViewProperty			Name="MemPassword"			Group="Behavior"			Type="string"			EditorType="MultiLineEditor"		#tag EndViewProperty		#tag ViewProperty			Name="MemUsername"			Group="Behavior"			Type="String"			EditorType="MultiLineEditor"		#tag EndViewProperty	#tag EndViewBehaviorEnd Class#tag EndClass