#tag ModuleProtected Module MelativeLibraryFunctions	#tag Method, Flags = &h0		Sub AddNewTitle(MediaTitle as string, MediaType as string)		  Dim addw as new addwindow		  addw.TextField1.text = MediaTitle		  If MediaType = "anime" then		    addw.popupmenu1.listindex = 0		  elseif MediaType = "manga" then		    addw.popupmenu1.listindex = 1		  elseif MediaType = "lightnovel" then		    addw.popupmenu1.listindex = 2		  elseif MediaType = "vn" then		    addw.popupmenu1.listindex = 3		  elseif MediaType = "adrama" then		    addw.popupmenu1.listindex = 4		  end if		  addw.showmodalwithin(Window1)		  If addw.success = true then		    If window1.mediatype = addw.popupmenu1.text then		      Window1.loadlist(true)		    end if		  end if		  addw.close		  		End Sub	#tag EndMethod	#tag Method, Flags = &h0		Function login(username as string, password as string, yield as boolean) As integer		  // using API to check credentials		  Dim socket1 as New HTTPSocket		  dim data as string		  socket1.yield = yield		  app.loginenc = EncodeBase64(username+ ":" + password)		  socket1.setrequestheader "Authorization","Basic " + app.loginenc		  data = socket1.get("http://melative.com/api/account/verify_credentials.xml",10)		  		  return socket1.httpstatuscode		End Function	#tag EndMethod	#tag Method, Flags = &h0		Sub RecommendTitle(Title as string, mediatype as string)		  dim rec as new recommend		  rec.titleprob = title		  rec.recommendlbl.text = "Recommend: " + rec.titleprob		  rec.showmodalwithin(Window1)		  rec.close		End Sub	#tag EndMethod	#tag Method, Flags = &h0		Function segmentupdate(title as string, segment as string, mediatype as string) As integer		  dim socket1 as new httpsocket		  dim form1 as new dictionary		  dim data as string		  dim segmentname as string		  If mediatype = "anime" or mediatype = "adrama" then		    segmentname = "Episode"		  elseif mediatype = "lightnovel" or mediatype = "manga" then		    segmentname = "Chapter"		  elseif mediatype = "vn" then		    segmentname = ""		  end if		  // Scobble Title Only		  form1.value(mediatype) =  title		  If segmentname = "" then		    // It should never do this... but...		    form1.value("segment")  = segment		  else		    If segment = "" then		      form1.value("segment")  = ""		    else		      form1.value("segment") = segmentname + "|" + segment		    end if		  end if		  socket1.setFormData form1		  socket1.yield = true		  socket1.setrequestheader "Authorization","Basic " + app.loginenc		  data = socket1.post("http://melative.com/api/library/segment/update.json",10)		  form1 = nil		  return socket1.httpstatuscode		End Function	#tag EndMethod	#tag Method, Flags = &h0		Sub ShowMoreInfowindow(Title as string, mediatype as string)		  dim infow as new lookupwindow		  infow.SeriesTitle.text = title		  Infow.Title = title		  infow.mediatype = mediatype		  infow.loadmelativexml		  infow.show		End Sub	#tag EndMethod	#tag Method, Flags = &h0		Sub ShowUseDialog(title as string, mediatype as string)		  dim mu as new melupdatewindow		  mu.truewindow.Title = "Post Melative Update - " + title		  mu.titletext.Text = title		  mu.checkbox1.value = true		  If mediatype = "anime"  or mediatype = "adrama" then		    If mediatype = "anime" then		      mu.PopupMenu1.ListIndex =0		    elseif mediatype = "adrama" then		      mu.popupmenu1.listindex = 4		    end if		    mu.segmentlbl.text = "Episode:"		    mu.segmenttitle = "Episode"		  elseif mediatype = "manga"  or mediatype = "lightnovel" then		    If mediatype = " manga" then		      mu.PopupMenu1.ListIndex =1		    else		      mu.PopupMenu1.ListIndex = 2		    end if		    mu.segmentlbl.text = "Chapter:"		    mu.segmenttitle = "Chapter"		    mu.TextField1.text = "Reading"		  elseif mediatype = "vn" then		    mu.segmentlbl.text = "Arc:"		    mu.segmenttitle = ""		    mu.PopupMenu1.ListIndex = 3		    mu.TextField1.text = "Playing"		  end if		  mu.Show		End Sub	#tag EndMethod	#tag Note, Name = Note		This is not a reusable class and it will only work with Melative Library	#tag EndNote	#tag ViewBehavior		#tag ViewProperty			Name="Index"			Visible=true			Group="ID"			InitialValue="-2147483648"			InheritedFrom="Object"		#tag EndViewProperty		#tag ViewProperty			Name="Left"			Visible=true			Group="Position"			InitialValue="0"			InheritedFrom="Object"		#tag EndViewProperty		#tag ViewProperty			Name="Name"			Visible=true			Group="ID"			InheritedFrom="Object"		#tag EndViewProperty		#tag ViewProperty			Name="Super"			Visible=true			Group="ID"			InheritedFrom="Object"		#tag EndViewProperty		#tag ViewProperty			Name="Top"			Visible=true			Group="Position"			InitialValue="0"			InheritedFrom="Object"		#tag EndViewProperty	#tag EndViewBehaviorEnd Module#tag EndModule