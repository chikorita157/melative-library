#tag ModuleProtected Module KeyboardUIMode	#tag Method, Flags = &h1		Protected Function GetMode() As Boolean		  		  dim keyboardMode as integer = 0		  dim s as shell		  s = New Shell		  s.Execute "defaults read -g AppleKeyboardUIMode"		  		  if s.ErrorCode = 0 then		    keyboardMode = val(trim(s.result))		    		    if ((keyboardMode and 2) > 0) then		      isFullKeyboard = true		      Return true		    else		      isFullKeyboard = false		      Return false		    end if		  end if		End Function	#tag EndMethod	#tag Method, Flags = &h1		Protected Sub SetControls(w as window, b as boolean)		  		  dim i as integer		  		  		  For i = 0 to w.ControlCount-1 //number of controls in window		    		    // This is jsut an example, test with other controls		    // 		    		    if w.Control(i) isa BevelButton then		      BevelButton(w.Control(i)).TabStop = b		      BevelButton(w.Control(i)).AcceptFocus = b		    end if		    		    if w.Control(i) isa PopupMenu then		      PopupMenu(w.Control(i)).TabStop = b		    end if		    		    if w.Control(i) isa CheckBox then		      CheckBox(w.Control(i)).TabStop = b		    end if		    		    if w.Control(i) isa RadioButton then		      RadioButton(w.Control(i)).TabStop = b		    end if		    		    if w.Control(i) isa TabPanel then		      TabPanel(w.Control(i)).TabStop = b		    end if		    		    if w.Control(i) isa PopupMenu then		      PopupMenu(w.Control(i)).TabStop = b		    end if		    		    if w.Control(i) isa Slider then		      Slider(w.Control(i)).TabStop = b		    end if		    		    		    // BUGGY Don't works!		    		    if w.Control(i) isa PopupArrow then		      PopupArrow(w.Control(i)).TabStop = b		    end if		    		    if w.Control(i) isa DisclosureTriangle then		      DisclosureTriangle(w.Control(i)).TabStop = b		    end if		    		    		  next i		  		End Sub	#tag EndMethod	#tag Note, Name = Usage				KeyboardUIMode.SetControls(self,KeyboardUIMode.GetMode)	#tag EndNote	#tag Property, Flags = &h1		Protected isFullKeyboard As Boolean	#tag EndProperty	#tag ViewBehavior		#tag ViewProperty			Name="Index"			Visible=true			Group="ID"			InitialValue="-2147483648"			InheritedFrom="Object"		#tag EndViewProperty		#tag ViewProperty			Name="Left"			Visible=true			Group="Position"			InitialValue="0"			InheritedFrom="Object"		#tag EndViewProperty		#tag ViewProperty			Name="Name"			Visible=true			Group="ID"			InheritedFrom="Object"		#tag EndViewProperty		#tag ViewProperty			Name="Super"			Visible=true			Group="ID"			InheritedFrom="Object"		#tag EndViewProperty		#tag ViewProperty			Name="Top"			Visible=true			Group="Position"			InitialValue="0"			InheritedFrom="Object"		#tag EndViewProperty	#tag EndViewBehaviorEnd Module#tag EndModule