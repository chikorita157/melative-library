#tag WindowBegin Window LibraryBrowser   BackColor       =   &hFFFFFF   Backdrop        =   ""   CloseButton     =   True   Composite       =   True   Frame           =   0   FullScreen      =   False   HasBackColor    =   False   Height          =   400   ImplicitInstance=   True   LiveResize      =   True   MacProcID       =   0   MaxHeight       =   32000   MaximizeButton  =   True   MaxWidth        =   32000   MenuBar         =   866092770   MenuBarVisible  =   True   MinHeight       =   400   MinimizeButton  =   True   MinWidth        =   600   Placement       =   0   Resizeable      =   True   Title           =   "Library Browser"   Visible         =   True   Width           =   600   Begin PopupMenu UsersMenu      AutoDeactivate  =   True      Bold            =   ""      DataField       =   ""      DataSource      =   ""      Enabled         =   True      Height          =   28      HelpTag         =   "Library Selection"      Index           =   -2147483648      InitialParent   =   ""      InitialValue    =   ""      Italic          =   ""      Left            =   6      ListIndex       =   0      LockBottom      =   ""      LockedInPosition=   False      LockLeft        =   True      LockRight       =   ""      LockTop         =   True      Scope           =   0      TabIndex        =   1      TabPanelIndex   =   0      TabStop         =   True      TextFont        =   "System"      TextSize        =   0      TextUnit        =   0      Top             =   6      Underline       =   ""      Visible         =   True      Width           =   132   End   Begin StaticText StaticText1      AutoDeactivate  =   True      Bold            =   ""      DataField       =   ""      DataSource      =   ""      Enabled         =   True      Height          =   20      HelpTag         =   ""      Index           =   -2147483648      InitialParent   =   ""      Italic          =   ""      Left            =   369      LockBottom      =   ""      LockedInPosition=   False      LockLeft        =   False      LockRight       =   True      LockTop         =   True      Multiline       =   ""      Scope           =   0      TabIndex        =   1      TabPanelIndex   =   0      Text            =   "Media Type:"      TextAlign       =   2      TextColor       =   &h000000      TextFont        =   "System"      TextSize        =   0      TextUnit        =   0      Top             =   6      Underline       =   ""      Visible         =   True      Width           =   100   End   Begin PopupMenu mediatypemenu      AutoDeactivate  =   True      Bold            =   ""      DataField       =   ""      DataSource      =   ""      Enabled         =   True      Height          =   28      HelpTag         =   ""      Index           =   -2147483648      InitialParent   =   ""      InitialValue    =   "anime\rmanga\rlightnovel\rvn\radrama"      Italic          =   ""      Left            =   481      ListIndex       =   0      LockBottom      =   ""      LockedInPosition=   False      LockLeft        =   False      LockRight       =   True      LockTop         =   True      Scope           =   0      TabIndex        =   3      TabPanelIndex   =   0      TabStop         =   True      TextFont        =   "System"      TextSize        =   0      TextUnit        =   0      Top             =   5      Underline       =   ""      Visible         =   True      Width           =   100   End   Begin Listbox Listbox1      AutoDeactivate  =   True      AutoHideScrollbars=   True      Bold            =   ""      Border          =   True      ColumnCount     =   1      ColumnsResizable=   ""      ColumnWidths    =   ""      DataField       =   ""      DataSource      =   ""      DefaultRowHeight=   -1      Enabled         =   True      EnableDrag      =   ""      EnableDragReorder=   ""      GridLinesHorizontal=   0      GridLinesVertical=   0      HasHeading      =   ""      HeadingIndex    =   -1      Height          =   344      HelpTag         =   ""      Hierarchical    =   ""      Index           =   -2147483648      InitialParent   =   ""      InitialValue    =   ""      Italic          =   ""      Left            =   0      LockBottom      =   True      LockedInPosition=   False      LockLeft        =   True      LockRight       =   True      LockTop         =   True      RequiresSelection=   ""      Scope           =   0      ScrollbarHorizontal=   ""      ScrollBarVertical=   True      SelectionType   =   0      TabIndex        =   4      TabPanelIndex   =   0      TabStop         =   True      TextFont        =   "System"      TextSize        =   11      TextUnit        =   0      Top             =   36      Underline       =   ""      UseFocusRing    =   False      Visible         =   True      Width           =   600      _ScrollWidth    =   -1   End   Begin PopupMenu statemenu      AutoDeactivate  =   True      Bold            =   ""      DataField       =   ""      DataSource      =   ""      Enabled         =   True      Height          =   26      HelpTag         =   "Filter by Status"      Index           =   -2147483648      InitialParent   =   ""      InitialValue    =   "current\rcomplete\rplanned\rstarted\rpaused\rresumed\rhold\rwishlisted\rmarathon\rbacklog\rdropped\rsubscribed\runknown\r-\rView All"      Italic          =   ""      Left            =   145      ListIndex       =   0      LockBottom      =   False      LockedInPosition=   False      LockLeft        =   True      LockRight       =   ""      LockTop         =   True      Scope           =   0      TabIndex        =   2      TabPanelIndex   =   0      TabStop         =   True      TextFont        =   "System"      TextSize        =   ""      TextUnit        =   0      Top             =   6      Underline       =   ""      Visible         =   True      Width           =   102   End   Begin StaticText compatibility      AutoDeactivate  =   True      Bold            =   ""      DataField       =   ""      DataSource      =   ""      Enabled         =   True      Height          =   14      HelpTag         =   "Library Compatibility"      Index           =   -2147483648      InitialParent   =   ""      Italic          =   ""      Left            =   253      LockBottom      =   ""      LockedInPosition=   False      LockLeft        =   True      LockRight       =   ""      LockTop         =   True      Multiline       =   ""      Scope           =   0      TabIndex        =   5      TabPanelIndex   =   0      Text            =   ""      TextAlign       =   0      TextColor       =   &h000000      TextFont        =   "System"      TextSize        =   12      TextUnit        =   0      Top             =   9      Underline       =   ""      Visible         =   True      Width           =   146   EndEnd#tag EndWindow#tag WindowCode	#tag Event		Sub Open()		  //set up listbox1 listbox		  listbox1.columncount=5		  listbox1.columnwidths="0,54%,14%,10%,22%"		  listbox1.HasHeading=True		  listbox1.Heading(0)="ID"		  listbox1.Heading(1)="Title"		  listbox1.Heading(2)="State"		  listbox1.Heading(3)="Rating"		  listbox1.Heading(4)="Progress"		  listbox1.Column(0).UserResizable=false		  listbox1.Column(3).UserResizable=false		End Sub	#tag EndEvent	#tag MenuHandler		Function FileClose() As Boolean Handles FileClose.Action			self.close			Return True					End Function	#tag EndMenuHandler	#tag Method, Flags = &h0		Sub librarycompatibility()		  dim socket1 as new httpsocket		  dim listdata as string		  socket1.yield = true		  socket1.setrequestheader "Authorization","Basic " + app.loginenc		  listdata= socket1.get("http://melative.com/api/library/compatibility/"  + UsersMenu.text + ".xml",10)		  // debugyourlist.text = data		  If socket1.httpstatuscode = 200 then		    //Populate data to the list		    // clear list		    dim XML as new XMLDocument		    dim d as new dictionary // store item information		    dim p as new xmlnodelist // store item information		    dim r as xmlnode		    xml.LoadXML(listdata)		    r = getXMLroot(xml)		    p = getanything(r, "//user") // load item information		    d = parseAnime(p.Item(0))		    compatibility.text = d.value("compatibility")		  else		  end if		End Sub	#tag EndMethod	#tag Method, Flags = &h0		Sub loadlist(silent as boolean)		  dim socket1 as new httpsocket		  dim listdata as string		  socket1.yield = true		  socket1.setrequestheader "Authorization","Basic " + app.loginenc		  listdata= socket1.get("http://melative.com/api/library.xml?user="  + UsersMenu.text + "&context_type=" + mediatypemenu.text,10)		  // debugyourlist.text = data		  If socket1.httpstatuscode = 200 then		    //Populate data to the list		    // clear list		    dim XML as new XMLDocument		    dim d as new dictionary // store item information		    dim d2 as new dictionary // context information		    dim d3 as new dictionary // progress		    dim p as new xmlnodelist // store item information		    dim p2 as new xmlnodelist // context information		    dim p3 as new xmlnodelist // progress		    dim c , i, pcount as integer		    dim r as xmlnode		    xml.LoadXML(listdata)		    r = getXMLroot(xml)		    p = getanything(r, "//response/library/record") // load item information		    p2=getanything(r, "//response/library/record/entity") // load context information		    p3 = getanything(r, "//response/library/record/segment") //load progress information		    c = p.Length - 1		    dim t as dictionary		    l = new dictionary		    for i = 0 to c		      t = new dictionary		      d = parseAnime(p.Item(i))		      d2 = parsecontext(p2.Item(i))		      t.value("alias") = d2.value("aliase")		      t.value("state") = d.value("state")		      t.value("last") = d.value("updated")		      if d.haskey("rating") then		        t.value("tier") = d.value("rating")		      else		        t.value("tier") = "-"		      end if		      If d.haskey("favorite") = true then		        t.value("favorite") = d.value("favorite")		      end if		      if d.HasKey("segment")= true then		        d3 = parseAnime(p3.item(pcount))		        pcount = pcount + 1		        If d3.haskey("type") = true then		          t.value("type") = d3.value("type")		          t.value("segname") = d3.value("name")		        else		          If  d3.haskey("name") = true then		            t.value("segname") = d3.value("name")		          end if		        end if		      end if		      l.value(d2.value("id")) = t		    next		    listbox1.visible = false		    reloadlist		    listbox1.visible = true		  else		    if silent = false then		      self.errboxshow("There is a problem while retreving your list",   "Unable to refresh your Library. Make sure you are connected to the internet!")		    end if		  end if		End Sub	#tag EndMethod	#tag Method, Flags = &h0		Sub reloadlist()		  listbox1.DeleteAllRows		  dim t as new dictionary		  dim i as integer		  for i = 0 to l.Count -1		    if l.value(l.key(i)) isa dictionary then		      t = l.value(l.key(i))		      If t.value("state") = statemenu.text or statemenu.text = "View All" then		        listbox1.AddRow(l.key(i))		        listbox1.Cell(listbox1.LastIndex, 1) = t.value("alias")		        listbox1.Cell(listbox1.LastIndex, 2) = t.Value("state")		        listbox1.Cell(listbox1.LastIndex, 3) = t.Value("tier")		        If t.haskey("type") = true and t.haskey("segname") then		          listbox1.Cell(listbox1.LastIndex, 4) = t.value("type") + " " + t.value("segname")		        elseif t.haskey("segname") = true then		          listbox1.Cell(listbox1.LastIndex, 4) = t.value("segname")		        end if		        If t.haskey("favorite") = true then		          If t.value("favorite") = 1 then		            listbox1.CellBold(listbox1.LastIndex, 1) = true		          end if		        end if		      end if		    end if		  next		  listbox1.listboxsort(1)		End Sub	#tag EndMethod	#tag Property, Flags = &h0		l As dictionary	#tag EndProperty#tag EndWindowCode#tag Events UsersMenu	#tag Event		Sub Open()		  dim socket1 as new httpsocket		  dim listdata as string		  socket1.yield = true		  listdata= socket1.get("http://melative.com/api/social/relations.xml?user=" + EncodeURLComponent(app.MemUsername) ,10)		  If socket1.httpstatuscode = 200 then		    //Populate data to the list		    // clear list		    dim XML as new XMLDocument		    dim d as new dictionary // store search info		    dim p as new xmlnodelist // store search info		    dim c , i as integer		    dim r as xmlnode		    xml.LoadXML(listdata)		    r = getXMLroot(xml)		    p = getanything(r, "//response/user") // Load search info		    c = p.Length - 1		    listbox1.DeleteAllRows		    for i = 0 to c		      d = parseAnime(p.Item(i))		      me.AddRow d.value("name")		    next		  else		    errboxshowdialog("Melative Library was unable to load your friends list.","Cannot retrieve data. Check your internet connection and try your search again.")		  end if		End Sub	#tag EndEvent	#tag Event		Sub Change()		  loadlist(false)		  librarycompatibility		End Sub	#tag EndEvent#tag EndEvents#tag Events mediatypemenu	#tag Event		Sub Change()		  If usersmenu.text = "" then		  else		    loadlist(false)		  end if		End Sub	#tag EndEvent#tag EndEvents#tag Events Listbox1	#tag Event		Function CellBackgroundPaint(g As Graphics, row As Integer, column As Integer) As Boolean		  #If TargetMacOS		    if row mod 2 = 0 then		      g.forecolor = GetThemeColor(kThemeBrushListViewOddRowBackground)		    else		      g.forecolor = GetThemeColor(kThemeBrushListViewEvenRowBackground)		    end		    g.fillrect(0,0,g.width,g.height)		  #endif		End Function	#tag EndEvent	#tag Event		Sub Open()		  #If TargetMacOS		    me.Hierarchical = true		  #endif		End Sub	#tag EndEvent	#tag Event		Function KeyDown(Key As String) As Boolean		  if key = chr(13) then		    ShowMoreInfowindow(listbox1.cell(listbox1.listindex,1),mediatypemenu.text)		  end if		End Function	#tag EndEvent	#tag Event		Sub DoubleClick()		  ShowMoreInfowindow(listbox1.cell(listbox1.listindex,1),mediatypemenu.text)		End Sub	#tag EndEvent#tag EndEvents#tag Events statemenu	#tag Event		Sub Change()		  reloadlist		End Sub	#tag EndEvent#tag EndEvents