#tag ClassProtected Class AppInherits Application	#tag Event		Sub Close()		  // Checks if RememberPassword is check and erases password if not.		  If  app.prefs.root.GetBoolean("RememberPassword",false) = false then		    app.prefs.root.SetString("Password","")		  else		    // Encode and Store Password		    app.prefs.root.SetString("Password",encodebase64(mempassword))		  end if		  // Save Preferences		  app.prefs.Save		End Sub	#tag EndEvent	#tag Event		Sub Open()		  		  // Check Login		  If app.prefs.root.GetBoolean("AutoLogin",false) = true then		    //Start auto login		    // using API to check credentials		    Dim socket1 as New HTTPSocket		    dim data as string		    memusername = app.prefs.root.GetString("Username")		    mempassword = DecodeBase64(app.prefs.root.GetString("Password"))		    loginenc = EncodeBase64(memusername + ":" + mempassword)		    socket1.setrequestheader "Authorization","Basic " + loginenc		    data = socket1.get("http://melative.com/api/account/verify_credentials.xml",10)		    If socket1.httpstatuscode = 200 then		      Window1.show		    Elseif socket1.httpstatuscode = 401 then		      errboxshowdialog("Melative Library was unable to log you in since you don't have the correct Username and/or Password.","Check your username and password and try logging in again. If you recently changed your password, enter your new password and try logging in.")		      loginenc = ""		      Window2.show		    else		      errboxshowdialog("Melative Library was unable to log you in since it cannot connect to the server. ", "Check your internet connection and try logging in again.")		      loginenc = ""		      Window2.show		    end if		  else		    Window2.show		  end if		End Sub	#tag EndEvent	#tag Event		Function UnhandledException(error As RuntimeException) As Boolean		  dim f as new errorreporting(error)		  f.ShowModal		  return true		End Function	#tag EndEvent	#tag MenuHandler		Function EditPreferences() As Boolean Handles EditPreferences.Action			winprefs.show			Return True					End Function	#tag EndMenuHandler	#tag MenuHandler		Function FileAboutMelativeLibrary() As Boolean Handles FileAboutMelativeLibrary.Action			aboutwindow.show			return true					End Function	#tag EndMenuHandler	#tag MenuHandler		Function FileCheckforUpdates() As Boolean Handles FileCheckforUpdates.Action			Return True		End Function	#tag EndMenuHandler	#tag MenuHandler		Function FileRefreshLibrary() As Boolean Handles FileRefreshLibrary.Action			window1.loadlist(false)			Return True					End Function	#tag EndMenuHandler	#tag Method, Flags = &h0		Sub checkforupdates(silentup as boolean)		  // check for updates		  If app.prefs.root.GetBoolean("AutoUpdates",false) = true and silentup = true then		  else		    dim v as string		    dim socket1 as new httpsocket		    v = socket1.get("http://chikorita157.notcliche.com/malclientosx/melativelibraryup.txt" ,10)		    If socket1.HTTPStatusCode = 200 then		      If val(app.ShortVersion) > val(v) or app.shortversion = v then		        If silentup = true then		        else		          msgbox "You're up to date! " + EndOfLine + EndOfLine +  "Melative Library " + app.shortversion + " is currently the newest version available."		        end if		      else		        Dim d as New MessageDialog //declare the MessageDialog object		        Dim b as MessageDialogButton //for handling the result		        d.icon=MessageDialog.GraphicQuestion //display question icon		        d.ActionButton.Caption="Update"		        d.CancelButton.Visible=True    //show the Cancel button		        d.Message="There is a new update for Melative Library"		        d.Explanation="Your version of Melative Library you are using is " + app.shortversion + " and the newest version is " + v +". Do you want to go to the Melative Library website to download this update?"		        b=d.ShowModal //display the dialog		        Select Case b //determine which button was pressed.		        Case d.ActionButton		          showurl "http://code.google.com/p/melativelibrary/downloads/list"		        Case d.CancelButton		          //user pressed Cancel		        End select		      end if		    else		      If silentup = true then		      else		        errboxshowdialog("Update Error!.","An error occurred in retrieving update information. Please try again")		      end if		    end if		  end if		End Sub	#tag EndMethod	#tag Method, Flags = &h21		Private Function HandleSparkleCancelQuit() As Boolean		  return true		End Function	#tag EndMethod	#tag Method, Flags = &h21		Private Sub HandleSparkleFoundVersion(isNew as Boolean, version as String)		  break		End Sub	#tag EndMethod	#tag Property, Flags = &h0		loginenc As string	#tag EndProperty	#tag Property, Flags = &h0		MemPassword As string	#tag EndProperty	#tag Property, Flags = &h0		MemUsername As String	#tag EndProperty	#tag Property, Flags = &h0		prefs As plist	#tag EndProperty	#tag Constant, Name = kEditClear, Type = String, Dynamic = False, Default = \"&Delete", Scope = Public		#Tag Instance, Platform = Windows, Language = Default, Definition  = \"&Delete"		#Tag Instance, Platform = Linux, Language = Default, Definition  = \"&Delete"	#tag EndConstant	#tag Constant, Name = kFileQuit, Type = String, Dynamic = False, Default = \"&Quit", Scope = Public		#Tag Instance, Platform = Windows, Language = Default, Definition  = \"E&xit"	#tag EndConstant	#tag Constant, Name = kFileQuitShortcut, Type = String, Dynamic = False, Default = \"", Scope = Public		#Tag Instance, Platform = Mac OS, Language = Default, Definition  = \"Cmd+Q"		#Tag Instance, Platform = Linux, Language = Default, Definition  = \"Ctrl+Q"	#tag EndConstant	#tag ViewBehavior		#tag ViewProperty			Name="loginenc"			Group="Behavior"			Type="string"			EditorType="MultiLineEditor"		#tag EndViewProperty		#tag ViewProperty			Name="MemPassword"			Group="Behavior"			Type="string"			EditorType="MultiLineEditor"		#tag EndViewProperty		#tag ViewProperty			Name="MemUsername"			Group="Behavior"			Type="String"			EditorType="MultiLineEditor"		#tag EndViewProperty	#tag EndViewBehaviorEnd Class#tag EndClass