#tag ModuleProtected Module SetWindow	#tag Method, Flags = &h1		Protected Sub Metal(w as window, b as Boolean)		  		  // Added 8/25/2002 by Kevin Ballard		  // Modified 9/15/2002 by Kevin Ballard		  		  // This function is only useful in RB v5.		  		  // If you want to use it, check the Composite property of the window. Then you can		  // use this function to change the Metal status at runtime, something RB v5 lets you do		  // only at design-time.		  		  // In RB versions less than v5, it will simply add a metal border to the window, which looks bad.		  		  const attrib = 256		  		  dim err as integer		  #if TargetCarbon then		    Declare Function ChangeWindowAttributes Lib "Carbon" (window as WindowPtr, setTheseAttributes as Integer, clearTheseAttributes as Integer) as Integer		    		    		    if b then		      err = ChangeWindowAttributes(w, attrib, 0)		    else		      err = ChangeWindowAttributes(w, 0, attrib)		    end		    		    		  #endif // TargetCarbon		End Sub	#tag EndMethod	#tag Method, Flags = &h1		Protected Sub SetRoundWindowTopBottom(w as window, top as integer, bottom as integer)		  #if TargetMacOS then		    if System.IsFunctionAvailable("HIWindowSetContentBorderThickness","Carbon") then		      Soft Declare Function HIWindowSetContentBorderThickness lib "Carbon" (w as WindowPtr, inBorderThickness as Ptr) as integer		      Soft Declare Function ChangeWindowAttributes Lib "Carbon" (w as WindowPtr, setAttributes as Integer, clearAttributes as Integer) as Integer		      		      const kHIWindowBitRoundBottomBarCorners = 13		      		      Dim OSError, oldAttr as integer		      Dim BorderThickness as new MemoryBlock(16)		      		      BorderThickness.SingleValue(0) = 0 //Top		      BorderThickness.SingleValue(4) = 0 //Must Be Zero		      BorderThickness.SingleValue(8) = bottom //Bottom		      BorderThickness.SingleValue(12) = 0 //Must Be Zerp		      		      OSError = HIWindowSetContentBorderThickness(w,BorderThickness)		      OSError = ChangeWindowAttributes(w,Bitwise.ShiftLeft(1,(kHIWindowBitRoundBottomBarCorners-1)),0)		    end if		  #endif		  		End Sub	#tag EndMethod	#tag Method, Flags = &h0		Sub windowset(extends w as window)		  dim sysVersion as Integer		  // Set Interface		  If System.Gestalt("sysv", sysVersion) and sysVersion >= &h1050 then		    SetWindow.SetRoundWindowTopBottom(w,42,24 )		    		  else		    //Revert to metal window if Mac OS X is 10.4 or 10.3		    SetWindow.Metal(w,true)		    		  end if		End Sub	#tag EndMethod	#tag ViewBehavior		#tag ViewProperty			Name="Index"			Visible=true			Group="ID"			InitialValue="-2147483648"			InheritedFrom="Object"		#tag EndViewProperty		#tag ViewProperty			Name="Left"			Visible=true			Group="Position"			InitialValue="0"			InheritedFrom="Object"		#tag EndViewProperty		#tag ViewProperty			Name="Name"			Visible=true			Group="ID"			InheritedFrom="Object"		#tag EndViewProperty		#tag ViewProperty			Name="Super"			Visible=true			Group="ID"			InheritedFrom="Object"		#tag EndViewProperty		#tag ViewProperty			Name="Top"			Visible=true			Group="Position"			InitialValue="0"			InheritedFrom="Object"		#tag EndViewProperty	#tag EndViewBehaviorEnd Module#tag EndModule