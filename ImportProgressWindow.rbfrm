#tag WindowBegin Window ImportProgressWindow   BackColor       =   16777215   Backdrop        =   ""   CloseButton     =   False   Composite       =   False   Frame           =   1   FullScreen      =   False   HasBackColor    =   False   Height          =   75   ImplicitInstance=   True   LiveResize      =   False   MacProcID       =   0   MaxHeight       =   32000   MaximizeButton  =   False   MaxWidth        =   32000   MenuBar         =   ""   MenuBarVisible  =   True   MinHeight       =   64   MinimizeButton  =   False   MinWidth        =   64   Placement       =   0   Resizeable      =   False   Title           =   "Importing List"   Visible         =   True   Width           =   348   Begin ProgressBar ProgressBar1      AutoDeactivate  =   True      Enabled         =   True      Height          =   20      HelpTag         =   ""      Index           =   -2147483648      InitialParent   =   ""      Left            =   20      LockBottom      =   ""      LockedInPosition=   False      LockLeft        =   True      LockRight       =   ""      LockTop         =   True      Maximum         =   100      Scope           =   0      TabPanelIndex   =   0      Top             =   29      Value           =   0      Visible         =   True      Width           =   308   End   Begin StaticText StaticText1      AutoDeactivate  =   True      Bold            =   ""      DataField       =   ""      DataSource      =   ""      Enabled         =   True      Height          =   20      HelpTag         =   ""      Index           =   -2147483648      InitialParent   =   ""      Italic          =   ""      Left            =   20      LockBottom      =   ""      LockedInPosition=   False      LockLeft        =   True      LockRight       =   ""      LockTop         =   True      Multiline       =   ""      Scope           =   0      TabIndex        =   0      TabPanelIndex   =   0      Text            =   "Importing..."      TextAlign       =   0      TextColor       =   0      TextFont        =   "System"      TextSize        =   0      TextUnit        =   0      Top             =   6      Underline       =   ""      Visible         =   True      Width           =   308   EndEnd#tag EndWindow#tag WindowCode	#tag Method, Flags = &h0		Sub ImportAnimeList()		  dim socket1 as new httpsocket		  dim s as string		  dim listdata as string		  // Obtain your anime list		  socket1.yield = true		  Log = "Import of " + importUsername +"'s list started" + endofline + endofline + "Retrieving List..."		  listdata= socket1.get("http://mal-api.com/animelist/" + importusername + "?format=xml" ,10)		  log = log + " Done!" +endofline + endofline + "Parsing XML..."		  If socket1.httpstatuscode = 200 then		    //Populate data to the list		    // clear list		    dim XML as new XMLDocument		    dim d as new dictionary // store item information		    dim p as new xmlnodelist // store item information		    dim c , i as integer		    dim r as xmlnode		    xml.LoadXML(listdata)		    r = getXMLroot(xml)		    p = getanything(r, "//animelist/anime")		    c = p.Length - 1		    Progressbar1.Maximum = c		    log = log + " Done!"		    for i = 0 to c		      Progressbar1.value = i		      d = parseAnime(p.Item(i))		      Log = log + endofline + endofline + "Importing: " + d.value("title") + endofline		      StaticText1.text = "Importing: " + d.value("title") + "..."		      If d.Value("watched_status") = "plan to watch" then		        s = "wishlisted"		      Elseif d.Value("watched_status") = "on-hold" then		        s = "hold"		      Elseif d.Value("watched_status") = "dropped" then		        s= "dropped"		      Elseif  d.Value("watched_status") = "watching" then		        s="current"		      else		        s = "complete"		      end if		      log = log + "Adding Title..." + RecordUpdate(d.value("title"),d.value("watched_episodes"),s,d.value("score")) + endofline		    next		    r = nil		    d = nil		    p = nil		    Log = log + endofline + "Import Complete!"		    Msgbox "List Import Complete!" + endofline+ endofline + "The changes should be reflected in your Melative Experience library."		    Dim t as TextOutputStream		    dim f as new folderitem		    f = SpecialFolder.Desktop		    f = f.child(ImportUsername + "- importloganime.log")		    t=TextOutputStream.Create(f)		    t.write log		    t.close		    self.close		  else		    errboxshowdialog("There is a problem while retreving your list",   "Unable to refresh your Anime List. Make sure you are connected to the internet!")		    self.close		  end if		End Sub	#tag EndMethod	#tag Method, Flags = &h0		Sub ImportMangaList()		  dim socket1 as new httpsocket		  dim s as string		  dim listdata as string		  // Obtain your anime list		  socket1.yield = true		  Log = "Import of " + importUsername +"'s list started" + endofline + endofline + "Retrieving List..."		  listdata= socket1.get("http://myanimelist.net/malappinfo.php?u=" + ImportUsername + "&status=all&type=manga" ,10)		  log = log + " Done!" +endofline + endofline + "Parsing XML..."		  If socket1.httpstatuscode = 200 then		    //Populate data to the list		    // clear list		    dim XML as new XMLDocument		    dim d as new dictionary // store item information		    dim p as new xmlnodelist // store item information		    dim c , i as integer		    dim r as xmlnode		    xml.LoadXML(listdata)		    r = getXMLroot(xml)		    p = getanything(r, "//myanimelist/manga")		    c = p.Length - 1		    Progressbar1.Maximum = c		    for i = 0 to c		      Progressbar1.value = i		      d = parseAnime(p.Item(i))		      log = log + " Done!"		      Log = log + endofline + endofline + "Importing: " + d.value("series_title") + endofline		      StaticText1.text = "Importing: " + d.Value("series_title") + "..."		      If d.Value("my_status") = "6" then		        s = "wishlisted"		      Elseif d.Value("my_status") = "3" then		        s = "hold"		      Elseif d.Value("my_status") = "4" then		        s= "dropped"		      Elseif  d.Value("my_status") = "1" then		        s="current"		      else		        s = "complete"		      end if		      log = log + "Adding Title..." + RecordUpdateManga(d.value("series_title"),d.value("my_read_chapters"),s,d.value("my_score")) + endofline		    next		    r = nil		    d = nil		    p = nil		    Log = log + endofline + "Import Complete!"		    Msgbox "List Import Complete!" + endofline+ endofline + "The changes should be reflected in your Melative Experience library."		    Dim t as TextOutputStream		    dim f as new folderitem		    f = SpecialFolder.Desktop		    f = f.child(ImportUsername + "- importlogmanga.log")		    t=TextOutputStream.Create(f)		    t.write log		    t.close		    self.close		  else		    errboxshowdialog("There is a problem while retreving your list",   "Unable to import your manga list. Make sure you are connected to the internet!")		    self.close		  end if		End Sub	#tag EndMethod	#tag Method, Flags = &h0		Function RecordUpdate(titleprob as string, epi as string, mediastate as string, rating as string) As string		  dim socket1 as new httpsocket		  dim form1 as new dictionary		  dim data as string		  // Scobble Title Only		  form1.value("anime") = titleprob		  form1.value("segment") = "Episode|" + epi		  form1.value("state") = mediastate		  form1.value("rating") = rating + "/" + "10"		  socket1.setFormData form1		  socket1.yield = true		  socket1.setrequestheader "Authorization","Basic " + app.loginenc		  data = socket1.post("http://melative.com/api/library/record.xml?is_local=1",10)		  form1 = nil		  return data		End Function	#tag EndMethod	#tag Method, Flags = &h0		Function RecordUpdateManga(titleprob as string, epi as string, mediastate as string, rating as string) As string		  dim socket1 as new httpsocket		  dim form1 as new dictionary		  dim data as string		  // Scobble Title Only		  form1.value("manga") = titleprob		  form1.value("segment") = "chapter|" + epi		  form1.value("state") = mediastate		  form1.value("rating") = rating + "/" + "10"		  socket1.setFormData form1		  socket1.yield = true		  socket1.setrequestheader "Authorization","Basic " + app.loginenc		  data = socket1.post("http://melative.com/api/library/record.xml?is_local=1",10)		  form1 = nil		  return data		End Function	#tag EndMethod	#tag Property, Flags = &h0		ImportUsername As string	#tag EndProperty	#tag Property, Flags = &h0		log As string	#tag EndProperty#tag EndWindowCode